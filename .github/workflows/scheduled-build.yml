name: Scheduled Build - Docker Hub Only

# Scheduled builds to Docker Hub only to avoid GHCR rate limiting
# GHCR pushes are reserved for tagged releases

on:
  schedule:
    # Run at 2 AM UTC daily for security patches
    - cron: '0 2 * * *'
  workflow_dispatch:
    inputs:
      push_to_registry:
        description: 'Push to Docker Hub'
        required: false
        default: true
        type: boolean
      platforms:
        description: 'Target platforms (comma-separated)'
        required: false
        default: 'linux/amd64,linux/arm64'
        type: string

env:
  REGISTRY_DOCKERHUB: docker.io
  IMAGE_NAME: magicalyak/nzbgetvpn

permissions:
  contents: read

jobs:
  scheduled-build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Extract metadata for scheduled build
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.REGISTRY_DOCKERHUB }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=nightly-{{date 'YYYYMMDD'}}
            type=raw,value=latest-dev
            type=sha,prefix=main-{{date 'YYYYMMDD'}}-
          labels: |
            org.opencontainers.image.title=nzbgetvpn
            org.opencontainers.image.description=NZBGet with VPN integration - Scheduled build
            org.opencontainers.image.vendor=magicalyak
            org.opencontainers.image.licenses=MIT
            org.opencontainers.image.source=https://github.com/${{ github.repository }}
            org.opencontainers.image.documentation=https://github.com/${{ github.repository }}/blob/main/README.md
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.created=${{ steps.meta.outputs.created }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          platforms: linux/amd64,linux/arm64

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY_DOCKERHUB }}
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push scheduled image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          platforms: ${{ inputs.platforms || 'linux/amd64,linux/arm64' }}
          push: ${{ inputs.push_to_registry || true }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          annotations: ${{ steps.meta.outputs.annotations }}
          cache-from: type=gha,scope=scheduled
          cache-to: type=gha,mode=max,scope=scheduled
          build-args: |
            BUILDPLATFORM=linux/amd64,linux/arm64

      - name: Test scheduled build
        if: inputs.push_to_registry != false
        run: |
          echo "ðŸ§ª Testing scheduled build..."
          
          # Extract version for testing
          VERSION=$(echo '${{ steps.meta.outputs.tags }}' | head -1 | cut -d':' -f2)
          
          # Test that the image can be pulled and basic commands work
          docker pull ${{ env.REGISTRY_DOCKERHUB }}/${{ env.IMAGE_NAME }}:$VERSION
          
          # Basic functionality test
          docker run --rm \
            ${{ env.REGISTRY_DOCKERHUB }}/${{ env.IMAGE_NAME }}:$VERSION \
            sh -c 'echo "Testing scheduled build functionality" && python3 --version && openvpn --version | head -1'
          
          echo "âœ… Scheduled build test completed successfully"

      - name: Clean up old nightly tags
        continue-on-error: true
        run: |
          echo "ðŸ§¹ Note: Consider implementing cleanup of old nightly tags to prevent registry bloat"
          echo "This can be done via Docker Hub API or manual cleanup" 